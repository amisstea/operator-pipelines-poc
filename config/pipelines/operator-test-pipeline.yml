---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: operator-test-pipeline
spec:
  params:
    - name: package_name
    - name: bundle_image
    - name: ocp_version
    - name: git_commit
    - name: git_repo_name
    - name: registry
    - name: s3_bucket
    - name: upload_results
    - name: set_github_status
  workspaces:
    - name: pipeline
    - name: aws-secrets
      optional: true
  tasks:
    - name: set-github-status-pending
      taskRef:
        name: github-set-status
      when:
        - input: $(params.set_github_status)
          operator: in
          values: ["true"]
      params:
        - name: REPO_FULL_NAME
          value: $(params.git_repo_name)
        - name: SHA
          value: $(params.git_commit)
        - name: DESCRIPTION
          value: "OpenShift $(params.ocp_version) testing started."
        - name: STATE
          value: pending
        - name: TARGET_URL
          value: ""
        - name: CONTEXT
          value: "operator-test/$(params.ocp_version)"

    - name: generate-index
      taskRef:
        name: generate-index
      params:
        - name: bundle_image
          value: $(params.bundle_image)
      workspaces:
        - name: output
          workspace: pipeline
          subPath: index

    - name: build-index
      runAfter:
        - generate-index
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: "$(params.registry)/$(context.pipelineRun.namespace)/$(params.package_name)-test-index:$(params.ocp_version)"
        - name: CONTEXT
          value: index
        - name: TLSVERIFY
          value: "false"
      workspaces:
        - name: source
          workspace: pipeline

    - name: test
      taskRef:
        name: operator-cert-test
      runAfter:
        - build-index
      workspaces:
        - name: results
          workspace: pipeline
          subPath: results
      params:
        - name: package_name
          value: $(params.package_name)
        - name: junit_xml_path
          value: "$(context.pipelineRun.name).xml"
        - name: junit_html_path
          value: "$(context.pipelineRun.name).html"

  finally:
    # The aws-cli task from Tekton Hub is not used because we need the task to
    # emit results so they can be emitted by this pipeline.
    - name: upload-results
      taskRef:
        name: aws-cli
      workspaces:
        - name: secrets
          workspace: aws-secrets
        - name: source
          workspace: pipeline
          subPath: results
      when:
        - input: $(params.upload_results)
          operator: in
          values: ["true"]
      params:
        - name: SCRIPT
          value: |
            aws s3 cp $(workspaces.source.path)/$(context.pipelineRun.name).xml \
                s3://$(params.s3_bucket)/$(context.pipelineRun.name).xml
            aws s3 cp $(workspaces.source.path)/$(context.pipelineRun.name).html \
                s3://$(params.s3_bucket)/$(context.pipelineRun.name).html

    - name: set-github-status
      taskRef:
        name: github-set-status
      when:
        - input: $(params.set_github_status)
          operator: in
          values: ["true"]
      params:
        - name: REPO_FULL_NAME
          value: $(params.git_repo_name)
        - name: SHA
          value: $(params.git_commit)
        - name: DESCRIPTION
          value: "OpenShift $(params.ocp_version) testing complete."
        - name: STATE
          value: $(tasks.test.results.state)
        - name: TARGET_URL
          value: "https://$(params.s3_bucket).s3.amazonaws.com/$(context.pipelineRun.name).html"
        - name: CONTEXT
          value: "operator-test/$(params.ocp_version)"

